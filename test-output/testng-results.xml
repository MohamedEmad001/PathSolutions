<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="2" total="9" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="testSuite" duration-ms="162758" started-at="2019-03-25T15:01:43Z" finished-at="2019-03-25T15:04:25Z">
    <groups>
      <group name="RetailMurabahaTest">
        <method signature="RetailMurabahaTest.CheckOpenRetailMurabah()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckOpenRetailMurabah" class="tests.RetailMurabahaTest"/>
        <method signature="RetailMurabahaTest.CheckInsertAllMandatoryFields()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckInsertAllMandatoryFields" class="tests.RetailMurabahaTest"/>
        <method signature="RetailMurabahaTest.CheckSaveRetailMurabaha()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckSaveRetailMurabaha" class="tests.RetailMurabahaTest"/>
      </group> <!-- RetailMurabahaTest -->
      <group name="ProductSetupTest">
        <method signature="ProductSetupTest.CheckLogin()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="CheckLogin" class="tests.ProductSetupTest"/>
        <method signature="ProductSetupTest.FillData()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="FillData" class="tests.ProductSetupTest"/>
        <method signature="ProductSetupTest.SaveProductSetup()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="SaveProductSetup" class="tests.ProductSetupTest"/>
        <method signature="ProductSetupTest.PostButton()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="PostButton" class="tests.ProductSetupTest"/>
      </group> <!-- ProductSetupTest -->
    </groups>
    <test name="MytestCase" duration-ms="162758" started-at="2019-03-25T15:01:43Z" finished-at="2019-03-25T15:04:25Z">
      <class name="tests.ProductSetupTest">
        <test-method status="PASS" signature="startDriver(java.lang.String)[pri:0, instance:tests.ProductSetupTest@685cb137]" name="startDriver" is-config="true" duration-ms="5356" started-at="2019-03-25T15:01:37Z" finished-at="2019-03-25T15:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="PASS" signature="CheckLogin()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="CheckLogin" duration-ms="319" started-at="2019-03-25T15:01:43Z" finished-at="2019-03-25T15:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckLogin -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.ProductSetupTest@685cb137]" name="takeScreenshots" is-config="true" duration-ms="643" started-at="2019-03-25T15:01:43Z" finished-at="2019-03-25T15:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckLogin status=SUCCESS method=ProductSetupTest.CheckLogin()[pri:0, instance:tests.ProductSetupTest@685cb137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="PASS" signature="FillData()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="FillData" duration-ms="108760" started-at="2019-03-25T15:01:44Z" depends-on-methods="tests.ProductSetupTest.CheckLogin" finished-at="2019-03-25T15:03:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillData -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.ProductSetupTest@685cb137]" name="takeScreenshots" is-config="true" duration-ms="341" started-at="2019-03-25T15:03:32Z" finished-at="2019-03-25T15:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FillData status=SUCCESS method=ProductSetupTest.FillData()[pri:0, instance:tests.ProductSetupTest@685cb137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="PASS" signature="SaveProductSetup()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="SaveProductSetup" duration-ms="5105" started-at="2019-03-25T15:03:33Z" depends-on-methods="tests.ProductSetupTest.FillData" finished-at="2019-03-25T15:03:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SaveProductSetup -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.ProductSetupTest@685cb137]" name="takeScreenshots" is-config="true" duration-ms="335" started-at="2019-03-25T15:03:38Z" finished-at="2019-03-25T15:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SaveProductSetup status=SUCCESS method=ProductSetupTest.SaveProductSetup()[pri:0, instance:tests.ProductSetupTest@685cb137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="PASS" signature="PostButton()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="PostButton" duration-ms="5079" started-at="2019-03-25T15:03:38Z" depends-on-methods="tests.ProductSetupTest.SaveProductSetup" finished-at="2019-03-25T15:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostButton -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.ProductSetupTest@685cb137]" name="takeScreenshots" is-config="true" duration-ms="314" started-at="2019-03-25T15:03:43Z" finished-at="2019-03-25T15:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PostButton status=SUCCESS method=ProductSetupTest.PostButton()[pri:0, instance:tests.ProductSetupTest@685cb137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.ProductSetupTest@685cb137]" name="stopDriver" is-config="true" duration-ms="0" started-at="2019-03-25T15:04:25Z" finished-at="2019-03-25T15:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ProductSetupTest -->
      <class name="tests.RetailMurabahaTest">
        <test-method status="PASS" signature="CheckOpenRetailMurabah()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckOpenRetailMurabah" duration-ms="29797" depends-on-groups="ProductSetupTest" started-at="2019-03-25T15:03:44Z" finished-at="2019-03-25T15:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckOpenRetailMurabah -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="takeScreenshots" is-config="true" duration-ms="316" started-at="2019-03-25T15:04:13Z" finished-at="2019-03-25T15:04:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckOpenRetailMurabah status=SUCCESS method=RetailMurabahaTest.CheckOpenRetailMurabah()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="FAIL" signature="CheckInsertAllMandatoryFields()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckInsertAllMandatoryFields" duration-ms="11368" started-at="2019-03-25T15:04:14Z" depends-on-methods="tests.RetailMurabahaTest.CheckOpenRetailMurabah" finished-at="2019-03-25T15:04:25Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Element <a onclick="return openItemsPopup(this.id);" id="V18TC_V8TP_V8LCRepeater_ctl00_AddButton" consumers="page" href="javascript:__doPostBack('V18TC$V8TP$V8LCRepeater$ctl00$AddButton','')">...</a> is not clickable at point (243, 526). Other element would receive the click: <div class="lobibox-backdrop"></div>
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=71.0.3578.33 (269aa0e3f0db08097f0fe231c7e6be200b6939f7),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'EGDM1-ABAIOMY', ip: '192.168.113.60', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 71.0.3578.33 (269aa0e3f0db0..., userDataDir: C:\Users\AMR~1.BAI\AppData\...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:5444}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: ea68e889c39c2405f6dd02901b32b232]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Element <a onclick="return openItemsPopup(this.id);" id="V18TC_V8TP_V8LCRepeater_ctl00_AddButton" consumers="page" href="javascript:__doPostBack('V18TC$V8TP$V8LCRepeater$ctl00$AddButton','')">...</a> is not clickable at point (243, 526). Other element would receive the click: <div class="lobibox-backdrop"></div>
  (Session info: chrome=73.0.3683.86)
  (Driver info: chromedriver=71.0.3578.33 (269aa0e3f0db08097f0fe231c7e6be200b6939f7),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'EGDM1-ABAIOMY', ip: '192.168.113.60', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 71.0.3578.33 (269aa0e3f0db0..., userDataDir: C:\Users\AMR~1.BAI\AppData\...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:5444}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 73.0.3683.86, webStorageEnabled: true}
Session ID: ea68e889c39c2405f6dd02901b32b232
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy12.click(Unknown Source)
at Pages.PageBase.clickButton(PageBase.java:50)
at Pages.RetailMurabahaPage.FillRequiredFields(RetailMurabahaPage.java:91)
at tests.RetailMurabahaTest.CheckInsertAllMandatoryFields(RetailMurabahaTest.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckInsertAllMandatoryFields -->
        <test-method status="PASS" signature="takeScreenshots(org.testng.ITestResult)[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="takeScreenshots" is-config="true" duration-ms="352" started-at="2019-03-25T15:04:25Z" finished-at="2019-03-25T15:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckInsertAllMandatoryFields status=FAILURE method=RetailMurabahaTest.CheckInsertAllMandatoryFields()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshots -->
        <test-method status="SKIP" signature="CheckSaveRetailMurabaha()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2]" name="CheckSaveRetailMurabaha" duration-ms="0" started-at="2019-03-25T15:04:25Z" depends-on-methods="tests.RetailMurabahaTest.CheckInsertAllMandatoryFields" finished-at="2019-03-25T15:04:25Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method RetailMurabahaTest.CheckSaveRetailMurabaha()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method RetailMurabahaTest.CheckSaveRetailMurabaha()[pri:0, instance:tests.RetailMurabahaTest@6a41eaa2] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckSaveRetailMurabaha -->
      </class> <!-- tests.RetailMurabahaTest -->
    </test> <!-- MytestCase -->
  </suite> <!-- testSuite -->
</testng-results>
